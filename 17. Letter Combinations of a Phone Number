class Solution {
    public List<String> letterCombinations(String digits) {

        if (digits == null || digits.length() == 0) return new ArrayList<>();
        List<String> result=new ArrayList<>();
        String[] mapping={" ","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};

        backtrack(result,new StringBuilder(),digits,0,mapping);
        return result;
        
        
    }
 private void backtrack(List<String> result, StringBuilder temp, String digits, int index, String[] mapping) {
        if (index == digits.length()) {
            result.add(temp.toString());
            return;
        }

        String letters = mapping[digits.charAt(index) - '0'];
        for (char c : letters.toCharArray()) {
            temp.append(c);
            backtrack(result, temp, digits, index + 1, mapping);
            temp.deleteCharAt(temp.length() - 1); 
        }
     }
    



    }
